/**
 * Contact Interface
 * 
 * This file defines the TypeScript interface for Contact objects used throughout the application.
 * It represents individual contact persons within the Jezweb Hub, who may be associated with
 * one or more organisations.
 * 
 * The interface follows the Firestore document structure defined in the contacts collection.
 */

import { Timestamp } from 'firebase/firestore';
import { ContactOrganisation } from './ContactOrganisation';
import { ContactLead } from './ContactLead';

/**
 * Contact interface representing an individual contact person
 */
export interface Contact {
  contactId: string;          // Unique identifier (auto-generated by Firestore)
  firstName: string;          // First name of the contact
  lastName: string;           // Last name of the contact
  fullName: string;           // Combined first and last name
  email: string;              // Email address
  phone?: string;             // Optional: Phone number
  mobile?: string;            // Optional: Mobile number
  jobTitle?: string;          // Optional: Job title
  department?: string;        // Optional: Department
  city?: string;              // Optional: City
  country?: string;           // Optional: Country
  state?: string;             // Optional: State/Province
  notes?: string;             // Optional: Notes about the contact
  linkedIn?: string;          // Optional: LinkedIn profile URL
  role?: ContactRole;         // Optional: Role of the contact
  status?: ContactStatus;     // Optional: Status of the contact
  image?: string;             // Optional: Profile image URL
  color?: string;             // Optional: Color for visual identification
  icon?: string;              // Optional: Icon for visual identification
  organisations?: ContactOrganisation[]; // Optional: Associated organisations
  leads?: ContactLead[];      // Optional: Associated leads
  createdAt: Timestamp;       // Creation timestamp
  updatedAt: Timestamp;       // Last update timestamp
}

/**
 * ContactFormData interface for form handling
 * Similar to Contact but with optional ID and without timestamps
 */
export interface ContactFormData {
  contactId?: string;         // Optional for new contacts
  firstName: string;
  lastName: string;
  email: string;
  phone?: string;
  mobile?: string;
  jobTitle?: string;
  department?: string;
  city?: string;
  country?: string;
  state?: string;             // State/Province
  notes?: string;
  role?: ContactRole;
  status?: ContactStatus;
  linkedIn?: string;
  image?: string;
  color?: string;
  icon?: string;
}

/**
 * ContactStatus type for contact status values
 */
export type ContactStatus = 'active' | 'inactive' | 'former';

/**
 * ContactRole type for contact role values
 */
export type ContactRole = 'primary' | 'secondary' | 'owner' | 'manager' | 'staff' | 'technical' | 'billing' | 'other';