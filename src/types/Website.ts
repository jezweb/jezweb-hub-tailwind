import { Timestamp } from 'firebase/firestore';

/**
 * Hosting interface for website hosting details
 */
export interface Hosting {
  provider: string;      // Hosting provider (e.g., "Rocket", "AWS", "Cloudways", "cPanel", "Other")
  serverId?: string;     // Optional: Server ID or name
  phpVersion?: string;   // Optional: PHP version
  ipAddress?: string;    // Optional: IP address
  username?: string;     // Optional: Hosting username
  notes?: string;        // Optional: Notes about hosting configuration
  expiryDate?: string;   // Optional: Expiry date
}

/**
 * CMS interface for content management system details
 */
export interface CMS {
  type: string;          // CMS type (e.g., "WordPress", "Shopify", "Joomla", "Custom")
  version?: string;      // Optional: CMS version
  plugins?: string[];    // Optional: Array of plugin IDs
  theme?: {              // Optional: Theme details
    name?: string;
    version?: string;
    childTheme?: string;
  };
  adminUrl?: string;     // Optional: URL to the website's admin area
  notes?: string;        // Optional: Technical notes about the CMS configuration
}

/**
 * GoogleAnalytics interface for analytics details
 */
export interface GoogleAnalytics {
  gaId?: string;         // Google Analytics ID
  gtmId?: string;        // Google Tag Manager ID
}

/**
 * DNS interface for DNS details
 */
export interface DNS {
  hosting?: string;      // DNS hosting provider
  web_smtp?: string;     // Web SMTP provider
}

/**
 * DomainHosting interface for domain hosting details
 */
export interface DomainHosting {
  hosting?: string;      // Domain hosting provider
  registrar?: string;    // Domain registrar
  expiryDate?: string;   // Domain expiry date
  autoRenew?: boolean;   // Auto-renew setting
  domainContact?: string; // Domain contact reference
}

/**
 * SSLCertificate interface for SSL certificate details
 */
export interface SSLCertificate {
  expiryDate?: string;   // SSL certificate expiry date
  issuer?: string;       // SSL certificate issuer
}

/**
 * Backups interface for backup details
 */
export interface Backups {
  provider?: string;     // Backup provider
  frequency?: string;    // Backup frequency
  lastBackup?: string;   // Last backup date
  dropboxUrl?: string;   // Dropbox URL for backups
}

/**
 * Website interface representing a client website
 */
export interface Website {
  websiteId: string;          // Unique identifier (auto-generated by Firestore)
  organisationId: string;     // Reference to the 'organisationId' in the 'organisations' collection
  domain: string;             // The website's primary domain name (e.g., "example.com")
  status: WebsiteStatus;      // Website status
  hosting: Hosting;           // Hosting details
  cms: CMS;                   // CMS details
  ga?: GoogleAnalytics;       // Optional: Google Analytics details
  dns?: DNS;                  // Optional: DNS details
  domain_hosting?: DomainHosting; // Optional: Domain hosting details
  sslCertificate?: SSLCertificate; // Optional: SSL certificate details
  notes?: string;             // Optional: General notes about the website
  backups?: Backups;          // Optional: Backup details
  createdAt: Timestamp;       // Creation timestamp
  updatedAt: Timestamp;       // Last update timestamp
}

/**
 * WebsiteFormData interface for form handling
 * Similar to Website but with string dates for form inputs
 */
export interface WebsiteFormData {
  websiteId?: string;         // Optional for new websites
  organisationId: string;
  domain: string;
  status: WebsiteStatus;
  hosting: Hosting;
  cms: CMS;
  ga?: GoogleAnalytics;
  dns?: DNS;
  domain_hosting?: DomainHosting;
  sslCertificate?: SSLCertificate;
  notes?: string;
  backups?: Backups;
}

/**
 * WebsiteStatus type for website status values
 */
export type WebsiteStatus = 'active' | 'inactive' | 'development' | 'staging' | 'suspended';

/**
 * WebsiteWithOrganisation interface for website with organisation details
 */
export interface WebsiteWithOrganisation extends Website {
  organisation?: {
    organisationId: string;
    organisationName: string;
  };
}